generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model tab_user {
  id       Int    @id @default(autoincrement())
  email    String @unique
  name     String
  password String

  characters tab_character[]
}

model tab_character {
  id              Int    @id @default(autoincrement())
  nome            String
  jogador         String
  esteriotipo     String
  idade           Int
  descendencia    String
  altura          Int
  sexo            String
  peso            Int
  cabelos         String
  olhos           String
  aparencia_geral String

  // Atributos principais
  conhecimento   Int
  habilidade     Int
  vigor          Int
  folego         Int
  fe             Int
  magnetismo     Int
  acao_extra     Int
  peso_maximo    Int
  dano_adicional Int

  // Hierarquia
  nivel_atual              Int
  pontos_troca_atual       Int
  pontos_troca_necessarios Int

  // Finanças
  moedas_ouro  Int
  moedas_prata Int
  moedas_cobre Int

  userId Int
  user   tab_user @relation(fields: [userId], references: [id])

  // Relacionamentos
  skills  tab_character_skills[]
  weapons tab_character_weapons[]
  armors  tab_character_armors[]
  items   tab_character_items[]
}

model tab_character_skills {
  id                   Int    @id @default(autoincrement())
  nome                 String
  nivel_especializacao Int
  valor_teste          Int

  characterId Int
  character   tab_character @relation(fields: [characterId], references: [id])
}

model tab_character_weapons {
  id       Int    @id @default(autoincrement())
  nome     String
  dano     String
  tipo     String
  peso     Float
  desgaste Int
  bonus    Int

  characterId Int
  character   tab_character @relation(fields: [characterId], references: [id])
}

model tab_character_armors {
  id       Int    @id @default(autoincrement())
  nome     String
  defesa   Int
  tipo     String
  peso     Float
  desgaste Int
  bonus    Int

  characterId Int
  character   tab_character @relation(fields: [characterId], references: [id])
}

model tab_character_items {
  id         Int    @id @default(autoincrement())
  nome       String
  descricao  String
  quantidade Int
  peso       Float     
  characterId Int
  character   tab_character @relation(fields: [characterId], references: [id])
}

model tab_stereotype {
  id               Int     @id @default(autoincrement())
  nome             String  @unique
  descricao        String

  // Bônus de atributos
  conhecimento     Int
  vigor            Int
  habilidade       Int
  magnetismo       Int
  fe               Int

  // Perícia gratuita (nome livre)
  pericia_gratuita String
  restricao_pericia String? // Ex: "exceto Bélicas", ou null

  // Bônus de perícia e moedas
  bonus_pericia    Int
  bonus_moedas     Int

}
